#! /usr/bin/env ruby

require 'getoptlong'
require 'digest'
require 'bcrypt'
require 'base64'

opts = GetoptLong.new(
  [ '--algorithm', '-a', GetoptLong::REQUIRED_ARGUMENT],
  [ '--target', '-t', GetoptLong::REQUIRED_ARGUMENT]
)

algorithm, target = '', ''

opts.each do |opt, arg|
  if opt == '--algorithm'
    algorithm = arg.to_sym
  end

  if opt == '--target'
    target = arg
  end
end

def md5(string)
 Digest.hexencode(Digest::MD5.new.digest(string))
end

def bcrypt(string)
  BCrypt::Password.create(string, cost: 1).to_s
end

crypter = method(algorithm)

loop do
  puts "breaking password..."
  1.upto(10000) do |password_length|
    (0..255).to_a.repeated_permutation(password_length).each do |guess_bytes|
      guess = guess_bytes.map(&:chr).join
      if crypter.call(guess) == target
        puts guess
        exit
      end
    end
  end
end
